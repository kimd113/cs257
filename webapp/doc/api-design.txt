Harry Tian & Daeyeon Kim

REQUEST: /
GET parameters:
	trending_date (Optional, default=18.14.06)
RESPONSE: a JSON list of dictionaries, each of which representes a trending video on the user specified date. 
Each video dictionary will have the following fields.
	link: (string) a unique id that is part of the video link
	title: (string) the title of the video
	channel: (string) the channel of the video
	publish time: (string) the publish time of the video
	views: (int) the number of views of the video
	likes: (int) the number likes of the video
	dislikes (int) the number of dislikes of the video
	comments: (int) the number of comments of the video
	thumbnail_link: (string) the link to the video thumbnail
EXAMPLE: /?trending_date=18.30.05
	[{"link": "VYOjWnS4cMY", "title": "Childish Gambino - This Is America (Official Video)", "publish_time": "2018-05-06T04:00:07.000Z", "thumbnail_link": "https://i.ytimg.com/vi/VYOjWnS4cMY/default.jpg", "channel": "ChildishGambinoVEVO", "views": 210338856, "likes": 4836448, "dislikes": 326902, "comment_count": 501722}, 
	{"link": "7C2z4GqqS5E", "title": "BTS (\ubc29\ud0c4\uc18c\ub144\ub2e8) 'FAKE LOVE' Official MV", "publish_time": "2018-05-18T09:00:02.000Z", "thumbnail_link": "https://i.ytimg.com/vi/7C2z4GqqS5E/default.jpg", "channel": "ibighit", "views": 115664850, "likes": 5530568, "dislikes": 200995, "comment_count": 1213172},
	...]

REQUEST: /sign-up
GET parameters: user_name
RESPONSE: true if the username is not taken, else false 
EXAMPLE: /sign-up?user_name=me
	true

REQUEST: /log-in
GET parameters: user_name
RESPONSE: true if the username exists, else false
EXAMPLE: /log-in?user_name=yeet
	false

REQUEST: /user
GET parameters: user_name
RESPONSE: a JSON dictionary where the keys are the titles of the playlist 
        and the values are arrays of dictionaries where each dictionary represents a video.
        The structure is: dictionary of playlists -> playlist -> list of videos 
		A video dictionary contains its link, title, channel, publish_time, and thumbnail_link
        The first dictionary in each playlist stores the playlist_id in the format {'playlist_id':id}
EXAMPLE: /user?user_name=toot
	{
		"playlist1": [{"playlist_id": 1}, 
					  {"link": "ulNswX3If6U", "title": "Selena Gomez - Back To You (Lyric Video)", "publish_time": "2018-05-10T16:00:11.000Z", "thumbnail_link": "https://i.ytimg.com/vi/ulNswX3If6U/default.jpg", "channel": "Selena Gomez"}
					 ], 
		"pl1": [
				{"playlist_id": 4}, 
				{"link": "n_W54baizX8", "title": "Daddy Yankee - Hielo (Video Oficial)", "publish_time": "2018-05-18T14:00:04.000Z", "thumbnail_link": "https://i.ytimg.com/vi/n_W54baizX8/default.jpg", "channel": "Daddy Yankee"}
			   ]
	}

REQUEST: /create-playlist
GET parameters:
	user_name
	playlist_title
RESPONSE: None
EXAMPLE: /create-playlist?user_name=me&playlist_title=playlist1

REQUEST: /delete-playlist
GET parameters: 
	user_name
	playlist_id
RESPONSE: None
EXAMPLE: /delete-playlist?user_name=me&playlist_id=10

REQUEST: /save-to-playlist
GET parameter
	playlist_id
	video_id
RESPONSE: None
EXAMPLE: save-to-playlist?playlist_id=1&video_id=5201

REQUEST: /remove-from-playlist
GET parameter
	playlist_id
	video_id
RESPONSE: None
EXAMPLE: remove-from-playlist?playlist_id=1&video_id=5202